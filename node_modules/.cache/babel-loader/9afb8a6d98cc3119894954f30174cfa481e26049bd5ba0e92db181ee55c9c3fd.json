{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nexport const INCREMENT = \"increment\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    add(state, action) {\n      state.counter += action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n\n/* const countReducer = (state = initialState, action) => {\n  if (action.type === INCREMENT) {\n    return {\n      showCounter: state.showCounter,\n      counter: state.counter + 1,\n    };\n  }\n  if (action.type === \"decrement\") {\n    return {\n      showCounter: state.showCounter,\n      counter: state.counter - 1,\n    };\n  }\n\n  if (action.type === \"add\") {\n    return {\n      showCounter: state.showCounter,\n      counter: state.counter + action.payload,\n    };\n  }\n  if (action.type === \"toggleCounter\") {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter,\n    };\n  }\n\n  return state;\n}; */\n\nconst store = configureStore(counterSlice.reducer);\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","INCREMENT","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","add","action","payload","toggleCounter","store","reducer"],"sources":["/Users/deepaksinghjethi/Desktop/01-starting-project/src/store/index.js"],"sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\n\nexport const INCREMENT = \"increment\";\n\nconst initialState = {\n  counter: 0,\n  showCounter: true,\n};\n\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    add(state, action) {\n      state.counter += action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    },\n  },\n});\n\n/* const countReducer = (state = initialState, action) => {\n  if (action.type === INCREMENT) {\n    return {\n      showCounter: state.showCounter,\n      counter: state.counter + 1,\n    };\n  }\n  if (action.type === \"decrement\") {\n    return {\n      showCounter: state.showCounter,\n      counter: state.counter - 1,\n    };\n  }\n\n  if (action.type === \"add\") {\n    return {\n      showCounter: state.showCounter,\n      counter: state.counter + action.payload,\n    };\n  }\n  if (action.type === \"toggleCounter\") {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter,\n    };\n  }\n\n  return state;\n}; */\n\nconst store = configureStore(counterSlice.reducer);\n\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,OAAO,MAAMC,SAAS,GAAG,WAAW;AAEpC,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,CAAC;EACVC,WAAW,EAAE;AACf,CAAC;AAED,MAAMC,YAAY,GAAGN,WAAW,CAAC;EAC/BO,IAAI,EAAE,SAAS;EACfJ,YAAY;EACZK,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAE;MACfA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDO,SAASA,CAACD,KAAK,EAAE;MACfA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDQ,GAAGA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACjBH,KAAK,CAACN,OAAO,IAAIS,MAAM,CAACC,OAAO;IACjC,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAE;MACnBA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IACxC;EACF;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMW,KAAK,GAAGf,cAAc,CAACK,YAAY,CAACW,OAAO,CAAC;AAElD,eAAeD,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}